{"ast":null,"code":"// import {useState, useEffect} from 'react'\n// import Loader from 'react-loader-spinner'\n// import {LeaderboardContainer, LoadingViewContainer} from './styledComponents'\n// const apiStatusConstants = {\n//   initial: 'INITIAL',\n//   inProgress: 'IN_PROGRESS',\n//   success: 'SUCCESS',\n//   failure: 'FAILURE',\n// }\n// const Leaderboard = () => {\n//   const [apiResponse, setApiResponse] = useState({\n//     status: apiStatusConstants.initial,\n//     data: null,\n//     errorMsg: null,\n//   })\n//   useEffect(() => {\n//     const getLeaderboardData = async () => {\n//       setApiResponse({\n//         status: apiStatusConstants.inProgress,\n//         data: null,\n//         errorMsg: null,\n//       })\n//       const url = 'https://apis.ccbp.in/leaderboard'\n//       const options = {\n//         method: 'GET',\n//         headers: {\n//           Authorization:\n//             'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU',\n//         },\n//       }\n//       const response = await fetch(url, options)\n//       const responseData = await response.json()\n//     }\n//     getLeaderboardData()\n//   }, [])\n//   const renderFailureView = () => {}\n//   const renderSuccessView = () => {}\n//   const renderLoadingView = () => (\n//     <LoadingViewContainer>\n//       <Loader type='ThreeDots' color='#ffffff' height='50' width='50' />\n//     </LoadingViewContainer>\n//   )\n//   const renderLeaderboard = () => {\n//     const {status} = apiResponse\n//     switch (status) {\n//       case apiStatusConstants.inProgress:\n//         return renderLoadingView()\n//       case apiStatusConstants.success:\n//         return renderSuccessView()\n//       case apiStatusConstants.failure:\n//         return renderFailureView()\n//       default:\n//         return null\n//     }\n//   }\n//   return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>\n// }\n// export default Leaderboard\n// import Loader from 'react-loader-spinner'\n// import {useEffect, useState} from 'react'\n// import {LeaderboardContainer, LoadingViewContainer} from './styledComponents'\n// const Leaderboard = () => {\n//   // Your code goes here...\n//   const apiStatusConstants = {\n//     initial: 'INITIAL',\n//     inProgress: 'IN_PROGRESS',\n//     success: 'SUCCESS',\n//     failure: 'FAILURE',\n//   }\n//   const [apiResponse, setApiResponse] = useState({\n//     status: apiStatusConstants.initial,\n//     data: null,\n//     errorMsg: null,\n//   })\n//   useEffect(() => {\n//     const getLeaderBoardData = async () => {\n//       const url = 'https://apis.ccbp.in/leaderboard'\n//       const options = {\n//         method: 'GET',\n//         headers: {\n//           Authorization:\n//             'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU',\n//         },\n//       }\n//       setApiResponse({\n//         status: apiStatusConstants.inProgress,\n//         data: null,\n//         errorMsg: null,\n//       })\n//       const response = await fetch(url, options)\n//       const data = await response.json()\n//     }\n//     getLeaderBoardData()\n//     const renderLoadingView = () => (\n//       <LoadingViewContainer>\n//         <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n//       </LoadingViewContainer>\n//     )\n//     const renderSuccessView = () => {}\n//     const renderFailureView = () => {}\n//   })\n//   const renderLeaderboard = () => {\n//     // Your code goes here...\n//     const {status} = apiResponse\n//     switch (status) {\n//       case apiStatusConstants.inProgress:\n//         return renderLoadingView()\n//       case apiStatusConstants.success:\n//         return renderSuccessView()\n//       case apiStatusConstants.failure:\n//         return renderFailureView()\n//       default:\n//         return null\n//     }\n//   }\n//   return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>\n// }\n// export default Leaderboard\n//","map":{"version":3,"names":[],"sources":["/home/nxtwave/react-hooks/sessions/making-api-call-with-hooks-part-2/src/components/Leaderboard/index.js"],"sourcesContent":["// import {useState, useEffect} from 'react'\n// import Loader from 'react-loader-spinner'\n\n// import {LeaderboardContainer, LoadingViewContainer} from './styledComponents'\n\n// const apiStatusConstants = {\n//   initial: 'INITIAL',\n//   inProgress: 'IN_PROGRESS',\n//   success: 'SUCCESS',\n//   failure: 'FAILURE',\n// }\n\n// const Leaderboard = () => {\n//   const [apiResponse, setApiResponse] = useState({\n//     status: apiStatusConstants.initial,\n//     data: null,\n//     errorMsg: null,\n//   })\n\n//   useEffect(() => {\n//     const getLeaderboardData = async () => {\n//       setApiResponse({\n//         status: apiStatusConstants.inProgress,\n//         data: null,\n//         errorMsg: null,\n//       })\n\n//       const url = 'https://apis.ccbp.in/leaderboard'\n//       const options = {\n//         method: 'GET',\n//         headers: {\n//           Authorization:\n//             'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU',\n//         },\n//       }\n//       const response = await fetch(url, options)\n//       const responseData = await response.json()\n//     }\n\n//     getLeaderboardData()\n//   }, [])\n\n//   const renderFailureView = () => {}\n\n//   const renderSuccessView = () => {}\n\n//   const renderLoadingView = () => (\n//     <LoadingViewContainer>\n//       <Loader type='ThreeDots' color='#ffffff' height='50' width='50' />\n//     </LoadingViewContainer>\n//   )\n\n//   const renderLeaderboard = () => {\n//     const {status} = apiResponse\n\n//     switch (status) {\n//       case apiStatusConstants.inProgress:\n//         return renderLoadingView()\n//       case apiStatusConstants.success:\n//         return renderSuccessView()\n//       case apiStatusConstants.failure:\n//         return renderFailureView()\n//       default:\n//         return null\n//     }\n//   }\n\n//   return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>\n// }\n\n// export default Leaderboard\n\n// import Loader from 'react-loader-spinner'\n// import {useEffect, useState} from 'react'\n\n// import {LeaderboardContainer, LoadingViewContainer} from './styledComponents'\n\n// const Leaderboard = () => {\n//   // Your code goes here...\n//   const apiStatusConstants = {\n//     initial: 'INITIAL',\n//     inProgress: 'IN_PROGRESS',\n//     success: 'SUCCESS',\n//     failure: 'FAILURE',\n//   }\n\n//   const [apiResponse, setApiResponse] = useState({\n//     status: apiStatusConstants.initial,\n//     data: null,\n//     errorMsg: null,\n//   })\n\n//   useEffect(() => {\n//     const getLeaderBoardData = async () => {\n//       const url = 'https://apis.ccbp.in/leaderboard'\n//       const options = {\n//         method: 'GET',\n//         headers: {\n//           Authorization:\n//             'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU',\n//         },\n//       }\n\n//       setApiResponse({\n//         status: apiStatusConstants.inProgress,\n//         data: null,\n//         errorMsg: null,\n//       })\n\n//       const response = await fetch(url, options)\n//       const data = await response.json()\n//     }\n\n//     getLeaderBoardData()\n\n//     const renderLoadingView = () => (\n//       <LoadingViewContainer>\n//         <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n//       </LoadingViewContainer>\n//     )\n\n//     const renderSuccessView = () => {}\n//     const renderFailureView = () => {}\n//   })\n\n//   const renderLeaderboard = () => {\n//     // Your code goes here...\n\n//     const {status} = apiResponse\n\n//     switch (status) {\n//       case apiStatusConstants.inProgress:\n//         return renderLoadingView()\n//       case apiStatusConstants.success:\n//         return renderSuccessView()\n//       case apiStatusConstants.failure:\n//         return renderFailureView()\n//       default:\n//         return null\n//     }\n//   }\n\n//   return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>\n// }\n\n// export default Leaderboard\n//\n"],"mappings},"metadata":{},"sourceType":"module"}