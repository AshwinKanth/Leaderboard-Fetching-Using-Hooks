{"ast":null,"code":"var _jsxFileName = \"/home/nxtwave/react-hooks/sessions/making-api-call-with-hooks-part-2/src/components/Leaderboard/index.js\",\n    _s = $RefreshSig$();\n\n// import {useState, useEffect} from 'react'\n// import Loader from 'react-loader-spinner'\n// import {LeaderboardContainer, LoadingViewContainer} from './styledComponents'\n// const apiStatusConstants = {\n//   initial: 'INITIAL',\n//   inProgress: 'IN_PROGRESS',\n//   success: 'SUCCESS',\n//   failure: 'FAILURE',\n// }\n// const Leaderboard = () => {\n//   const [apiResponse, setApiResponse] = useState({\n//     status: apiStatusConstants.initial,\n//     data: null,\n//     errorMsg: null,\n//   })\n//   useEffect(() => {\n//     const getLeaderboardData = async () => {\n//       setApiResponse({\n//         status: apiStatusConstants.inProgress,\n//         data: null,\n//         errorMsg: null,\n//       })\n//       const url = 'https://apis.ccbp.in/leaderboard'\n//       const options = {\n//         method: 'GET',\n//         headers: {\n//           Authorization:\n//             'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU',\n//         },\n//       }\n//       const response = await fetch(url, options)\n//       const responseData = await response.json()\n//     }\n//     getLeaderboardData()\n//   }, [])\n//   const renderFailureView = () => {}\n//   const renderSuccessView = () => {}\n//   const renderLoadingView = () => (\n//     <LoadingViewContainer>\n//       <Loader type='ThreeDots' color='#ffffff' height='50' width='50' />\n//     </LoadingViewContainer>\n//   )\n//   const renderLeaderboard = () => {\n//     const {status} = apiResponse\n//     switch (status) {\n//       case apiStatusConstants.inProgress:\n//         return renderLoadingView()\n//       case apiStatusConstants.success:\n//         return renderSuccessView()\n//       case apiStatusConstants.failure:\n//         return renderFailureView()\n//       default:\n//         return null\n//     }\n//   }\n//   return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>\n// }\n// export default Leaderboard\nimport Loader from 'react-loader-spinner';\nimport { useEffect, useState } from 'react';\nimport { LeaderboardContainer, LoadingViewContainer } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Leaderboard = () => {\n  _s();\n\n  // Your code goes here...\n  const apiStatusConstants = {\n    initial: 'INITIAL',\n    inProgress: 'IN_PROGRESS',\n    success: 'SUCCESS',\n    failure: 'FAILURE'\n  };\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    data: null,\n    errorMsg: null\n  });\n  useEffect(() => {\n    const getLeaderBoardData = async () => {\n      const url = 'https://apis.ccbp.in/leaderboard';\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU'\n        }\n      };\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        data: null,\n        errorMsg: null\n      });\n      const response = await fetch(url, options);\n      const data = await response.json();\n    };\n\n    getLeaderBoardData();\n\n    const renderLoadingView = () => /*#__PURE__*/_jsxDEV(LoadingViewContainer, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"ThreeDots\",\n        color: \"#ffffff\",\n        height: \"50\",\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n\n    const renderSuccessView = () => {};\n\n    const renderFailureView = () => {};\n  });\n\n  const renderLeaderboard = () => {\n    // Your code goes here...\n    const {\n      status\n    } = apiResponse;\n\n    switch (status) {\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n\n      case apiStatusConstants.success:\n        return renderSuccessView();\n\n      case apiStatusConstants.failure:\n        return renderFailureView();\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LeaderboardContainer, {\n    children: renderLeaderboard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Leaderboard, \"LcejUL5Z8gTq0/4EosyqIhBfGKM=\");\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["Loader","useEffect","useState","LeaderboardContainer","LoadingViewContainer","Leaderboard","apiStatusConstants","initial","inProgress","success","failure","apiResponse","setApiResponse","status","data","errorMsg","getLeaderBoardData","url","options","method","headers","Authorization","response","fetch","json","renderLoadingView","renderSuccessView","renderFailureView","renderLeaderboard"],"sources":["/home/nxtwave/react-hooks/sessions/making-api-call-with-hooks-part-2/src/components/Leaderboard/index.js"],"sourcesContent":["// import {useState, useEffect} from 'react'\n// import Loader from 'react-loader-spinner'\n\n// import {LeaderboardContainer, LoadingViewContainer} from './styledComponents'\n\n// const apiStatusConstants = {\n//   initial: 'INITIAL',\n//   inProgress: 'IN_PROGRESS',\n//   success: 'SUCCESS',\n//   failure: 'FAILURE',\n// }\n\n// const Leaderboard = () => {\n//   const [apiResponse, setApiResponse] = useState({\n//     status: apiStatusConstants.initial,\n//     data: null,\n//     errorMsg: null,\n//   })\n\n//   useEffect(() => {\n//     const getLeaderboardData = async () => {\n//       setApiResponse({\n//         status: apiStatusConstants.inProgress,\n//         data: null,\n//         errorMsg: null,\n//       })\n\n//       const url = 'https://apis.ccbp.in/leaderboard'\n//       const options = {\n//         method: 'GET',\n//         headers: {\n//           Authorization:\n//             'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU',\n//         },\n//       }\n//       const response = await fetch(url, options)\n//       const responseData = await response.json()\n//     }\n\n//     getLeaderboardData()\n//   }, [])\n\n//   const renderFailureView = () => {}\n\n//   const renderSuccessView = () => {}\n\n//   const renderLoadingView = () => (\n//     <LoadingViewContainer>\n//       <Loader type='ThreeDots' color='#ffffff' height='50' width='50' />\n//     </LoadingViewContainer>\n//   )\n\n//   const renderLeaderboard = () => {\n//     const {status} = apiResponse\n\n//     switch (status) {\n//       case apiStatusConstants.inProgress:\n//         return renderLoadingView()\n//       case apiStatusConstants.success:\n//         return renderSuccessView()\n//       case apiStatusConstants.failure:\n//         return renderFailureView()\n//       default:\n//         return null\n//     }\n//   }\n\n//   return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>\n// }\n\n// export default Leaderboard\n\nimport Loader from 'react-loader-spinner'\nimport {useEffect, useState} from 'react'\n\nimport {LeaderboardContainer, LoadingViewContainer} from './styledComponents'\n\nconst Leaderboard = () => {\n  // Your code goes here...\n  const apiStatusConstants = {\n    initial: 'INITIAL',\n    inProgress: 'IN_PROGRESS',\n    success: 'SUCCESS',\n    failure: 'FAILURE',\n  }\n\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    data: null,\n    errorMsg: null,\n  })\n\n  useEffect(() => {\n    const getLeaderBoardData = async () => {\n      const url = 'https://apis.ccbp.in/leaderboard'\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU',\n        },\n      }\n\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        data: null,\n        errorMsg: null,\n      })\n\n      const response = await fetch(url, options)\n      const data = await response.json()\n    }\n\n    getLeaderBoardData()\n\n    const renderLoadingView = () => (\n      <LoadingViewContainer>\n        <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n      </LoadingViewContainer>\n    )\n\n    const renderSuccessView = () => {}\n    const renderFailureView = () => {}\n  })\n\n  const renderLeaderboard = () => {\n    // Your code goes here...\n\n    const {status} = apiResponse\n\n    switch (status) {\n      case apiStatusConstants.inProgress:\n        return renderLoadingView()\n      case apiStatusConstants.success:\n        return renderSuccessView()\n      case apiStatusConstants.failure:\n        return renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>\n}\n\nexport default Leaderboard\n\n"],"mappings":";;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,SAAQC,oBAAR,EAA8BC,oBAA9B,QAAyD,oBAAzD;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB;EACA,MAAMC,kBAAkB,GAAG;IACzBC,OAAO,EAAE,SADgB;IAEzBC,UAAU,EAAE,aAFa;IAGzBC,OAAO,EAAE,SAHgB;IAIzBC,OAAO,EAAE;EAJgB,CAA3B;EAOA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;IAC7CW,MAAM,EAAEP,kBAAkB,CAACC,OADkB;IAE7CO,IAAI,EAAE,IAFuC;IAG7CC,QAAQ,EAAE;EAHmC,CAAD,CAA9C;EAMAd,SAAS,CAAC,MAAM;IACd,MAAMe,kBAAkB,GAAG,YAAY;MACrC,MAAMC,GAAG,GAAG,kCAAZ;MACA,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KADM;QAEdC,OAAO,EAAE;UACPC,aAAa,EACX;QAFK;MAFK,CAAhB;MAQAT,cAAc,CAAC;QACbC,MAAM,EAAEP,kBAAkB,CAACE,UADd;QAEbM,IAAI,EAAE,IAFO;QAGbC,QAAQ,EAAE;MAHG,CAAD,CAAd;MAMA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAMC,OAAN,CAA5B;MACA,MAAMJ,IAAI,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAAnB;IACD,CAlBD;;IAoBAR,kBAAkB;;IAElB,MAAMS,iBAAiB,GAAG,mBACxB,QAAC,oBAAD;MAAA,uBACE,QAAC,MAAD;QAAQ,IAAI,EAAC,WAAb;QAAyB,KAAK,EAAC,SAA/B;QAAyC,MAAM,EAAC,IAAhD;QAAqD,KAAK,EAAC;MAA3D;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;;IAMA,MAAMC,iBAAiB,GAAG,MAAM,CAAE,CAAlC;;IACA,MAAMC,iBAAiB,GAAG,MAAM,CAAE,CAAlC;EACD,CA/BQ,CAAT;;EAiCA,MAAMC,iBAAiB,GAAG,MAAM;IAC9B;IAEA,MAAM;MAACf;IAAD,IAAWF,WAAjB;;IAEA,QAAQE,MAAR;MACE,KAAKP,kBAAkB,CAACE,UAAxB;QACE,OAAOiB,iBAAiB,EAAxB;;MACF,KAAKnB,kBAAkB,CAACG,OAAxB;QACE,OAAOiB,iBAAiB,EAAxB;;MACF,KAAKpB,kBAAkB,CAACI,OAAxB;QACE,OAAOiB,iBAAiB,EAAxB;;MACF;QACE,OAAO,IAAP;IARJ;EAUD,CAfD;;EAiBA,oBAAO,QAAC,oBAAD;IAAA,UAAuBC,iBAAiB;EAAxC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAlED;;GAAMvB,W;;KAAAA,W;AAoEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}